#!/bin/bash
set -euo pipefail
project_version=`cat pom.xml | grep "<version>.*</version>" | head -1 |awk -F'[><]' '{print $3}'`
artifactory_version=$project_version.$GITHUB_RUN_NUMBER
echo ::set-env name=IMAGE_VERSION::$(echo $artifactory_version)
#sed -i "s|@@HYSCALE_DOCKER_REPO_PATH@@|$DOCKER_REPO|g" scripts/hyscale
#grep -RiIl '@@HYSCALE_BUILD_VERSION@@' |grep -v publish_artifacts.sh| xargs sed -i "s|@@HYSCALE_BUILD_VERSION@@|$artifactory_version|g"
#grep -RiIl '@@HYSCALE_URL@@' |grep -v publis_artifacts.sh| xargs sed -i "s|@@HYSCALE_URL@@|https://s3-$AWS_REGION.amazonaws.com/$AWS_S3_BUCKET/hyscale/release/$artifactory_version/hyscale.jar|g"

docker_build_push()
{
  docker build -t $DOCKER_REPO/hyscale:$artifactory_version .
  docker login --username=$DOCKER_USERNAME  --password=$DOCKER_PASSWORD
  docker push $DOCKER_REPO/hyscale:$artifactory_version
  echo "extracting jarrrrrrrrrrrrrrrrrrr"
  docker run -v $(pwd):/var/tmp --entrypoint /bin/cp  $DOCKER_REPO/hyscale:$artifactory_version /usr/local/bin/hyscale.jar /var/tmp
  docker logout
}

aws_cp_upload()
{
  echo "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  for script in $2
  do 
    cat $script
    aws s3 cp $script s3://$AWS_S3_BUCKET/hyscale/release/$1/$script
    aws s3api put-object-tagging --bucket $AWS_S3_BUCKET  --key hyscale/release/$1/$script --tagging 'TagSet=[{Key=hyscalepubliccontent,Value=true}]'
    echo "yyyyyyyyyyyyyyyyyyyyyyyyyyy"
  done
}


if [ $GITHUB_WORKFLOW == "Build"  ]
then
  sed -i "s|@@HYSCALE_DOCKER_REPO_PATH@@|$DOCKER_REPO|g" scripts/hyscale
  grep -RiIl '@@HYSCALE_BUILD_VERSION@@' |grep -v publish_artifacts.sh| xargs sed -i "s|@@HYSCALE_BUILD_VERSION@@|$artifactory_version|g"
  grep -RiIl '@@HYSCALE_URL@@' |grep -v publis_artifacts.sh| xargs sed -i "s|@@HYSCALE_URL@@|https://s3-$AWS_REGION.amazonaws.com/$AWS_S3_BUCKET/hyscale/release/$artifactory_version/hyscale.jar|g"
  docker_build_push
  aws_cp_upload $artifactory_version "scripts/hyscale scripts/hyscale_osx scripts/hyscale.ps1 hyscale.jar"
fi
