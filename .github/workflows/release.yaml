# Build workflow gets auto triggered upon code merge to master or release* branches

name: Upload Release Asset

on:
  push:
    branches:
    - master
    - Release*
    paths:
      - 'test/a.txt'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: release_info # This would actually build your project, using zip for an example artifact
      id: release_info
      run: |
         IMAGE_VERSION=`cat test/a.txt`
         git tag $(cat pom.xml | grep "<version>.*</version>" | head -1 |awk -F'[><]' '{print $3}')
         git push origin --tags
         echo ::set-output name=PREVIOUS_TAG::$(curl --silent "https://api.github.com/repos/Srujankumar5140/test_pub/releases/latest" | grep 'tag_name' | sed -E 's/.*"([^"]+)".*/\1/')
         echo ::set-output name=RELEASE_VERSION::$(cat pom.xml | grep "<version>.*</version>" | head -1 |awk -F'[><]' '{print $3}')
         docker run -v $(pwd):/var/tmp --entrypoint /bin/cp  hyscale/hyscale:$IMAGE_VERSION /usr/local/bin/hyscale.jar /var/tmp
         curl -sSL ${{ secrets.HYS_STABLE_BINARY_URL }} | HYS_VERSION=$IMAGE_VERSION bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.release_info.outputs.RELEASE_VERSION }}
        release_name: v${{ steps.release_info.outputs.RELEASE_VERSION }} Release
        body: |
          ${{ steps.release_info.outputs.CHANGELOG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: hyscale.jar
        asset_name: hyscale.jar
        asset_content_type: application/jar

    - name: URL to Download Hyscale Artifact
      run: |
          . .github/workflows/release_info.sh
          echo -e ${CHANGELOG}
          echo -en "CHANGE LOG: \n${CHANGELOG} \n-------------------------------------------------------- \n" >> hyscale_version.txt
          echo -en "Hyscale tool Build Completed Successfully with $(echo ${GITHUB_REF##*/}) and can be downloaded using \ncurl -sSL ${{ secrets.HYS_DEV_BINARY_URL }} | bash" >> hyscale_version.txt
      env:
         PREVIOUS_TAG: ${{ steps.release_info.outputs.PREVIOUS_TAG }}
         NEW_TAG: v${{ steps.release_info.outputs.RELEASE_VERSION }}

    - name: SendGrid
      uses: peter-evans/sendgrid-action@v1
      env:
        SENDGRID_API_KEY: ${{ secrets.HYS_SENDGRID_API_KEY }}
